{"ast":null,"code":"var _jsxFileName = \"/mnt/30C4462BC445F39E/ODL Projects/myNewPortfolio/my-app/src/pages/typingAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Typed from 'typed.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = () => {\n  _s();\n  // Create a reference to the element where you want to apply the typing effect\n  const typedElementRef = useRef(null);\n  useEffect(() => {\n    // Initialize Typed.js\n    const typed = new Typed(typedElementRef.current, {\n      strings: ['Masood'],\n      typeSpeed: 200,\n      loop: false,\n      showCursor: false // Hide the cursor\n    });\n\n    // Cleanup the effect when the component unmounts\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"heading-typing\",\n    ref: typedElementRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(TypingAnimation, \"2zzD+sdkEa6nWbXeCHvb4RTG6Ww=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useEffect","useRef","Typed","jsxDEV","_jsxDEV","TypingAnimation","_s","typedElementRef","typed","current","strings","typeSpeed","loop","showCursor","destroy","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/30C4462BC445F39E/ODL Projects/myNewPortfolio/my-app/src/pages/typingAnimation.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Typed from 'typed.js';\n\nconst TypingAnimation = () => {\n  // Create a reference to the element where you want to apply the typing effect\n  const typedElementRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize Typed.js\n    const typed = new Typed(typedElementRef.current, {\n      strings: ['Masood'],\n      typeSpeed: 200,\n      loop: false,\n      showCursor: false, // Hide the cursor\n    });\n\n    // Cleanup the effect when the component unmounts\n    return () => {\n      typed.destroy();\n    };\n  }, []);\n\n  return <span className=\"heading-typing\" ref={typedElementRef}></span>;\n};\n\nexport default TypingAnimation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,eAAe,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAG,IAAIN,KAAK,CAACK,eAAe,CAACE,OAAO,EAAE;MAC/CC,OAAO,EAAE,CAAC,QAAQ,CAAC;MACnBC,SAAS,EAAE,GAAG;MACdC,IAAI,EAAE,KAAK;MACXC,UAAU,EAAE,KAAK,CAAE;IACrB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXL,KAAK,CAACM,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOV,OAAA;IAAMW,SAAS,EAAC,gBAAgB;IAACC,GAAG,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AACvE,CAAC;AAACd,EAAA,CApBID,eAAe;AAAAgB,EAAA,GAAfhB,eAAe;AAsBrB,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}